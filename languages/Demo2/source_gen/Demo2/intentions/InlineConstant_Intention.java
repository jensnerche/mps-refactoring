package Demo2.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class InlineConstant_Intention extends BaseIntention implements Intention {
  public InlineConstant_Intention() {
  }

  public String getConcept() {
    return "Demo2.structure.ConstantReference";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Inline Constant";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode original = SLinkOperations.getTarget(node, "original", false);
    SNodeOperations.replaceWithAnother(node, SNodeOperations.copyNode(SLinkOperations.getTarget(original, "initializer", true)));
  }

  public String getLocationString() {
    return "Demo2.intentions";
  }
}
